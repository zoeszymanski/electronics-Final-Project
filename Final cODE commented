
ENTITY Final_Project IS
	PORT (SWT : IN BIT_VECTOR (9	DOWNTO 0);
			segs2 : OUT BIT_VECTOR (6 DOWNTO 0);
			segs3 : OUT BIT_VECTOR (6 DOWNTO 0);
			segs : OUT BIT_VECTOR (6 DOWNTO 0);
			BIN : IN BIT_VECTOR (3 DOWNTO 0));
END Final_Project; -- This section of the code is used to assign the bit vectors for the inputs and outputs

ARCHITECTURE Behavioral OF Final_Project IS

BEGIN -- Starts the architecture (basically starts code)

    PROCESS (SWT) -- begins process 
    BEGIN 
	 
	 cASE SWT IS -- Starts case with based on the switches 
	 
	WHEN "0000000000" => segs <= "1000000"; --0
	WHEN "0000000001" => segs <= "1111001";--1
	WHEN "0000000011" => segs <= "0100100";--2
	WHEN "0000000111" => segs <= "0110000";--3
	WHEN "0000001111" => segs <= "0011001";--4
	WHEN "0000011111" => segs <= "0010010";--5
	WHEN "0000111111" => segs <= "0000010";--6
	WHEN "0001111111" => segs <= "1111000";--7
	WHEN "0011111111" => segs <= "0000000";--8
	WHEN "0111111111" => segs <= "0010000";--9
	WHEN "1111111111" => segs <= "0001000";--A
	WHEN "0000000010" => segs <= "0100001";--B
	WHEN "0000000110" => segs <= "1110000";--C
	WHEN "0000001110" => segs <= "0000011";--D
	WHEN "0000011110" => segs <= "0000110";--E
	WHEN "0000111110" => segs <= "0001110";--F	
	WHEN OTHERS => segs <= "0111111"; 
	--This case reads the swith values and then displays the number in HEX to the first 7 segment display
	--if an incorrect switch combination is entered then a - apears on the first 7 segment display
	
	
	END CASE; -- ends case
	
	CASE BIN IS --starts a case baised on the buttons 
	
	WHEN "1111" => segs2 <= "1000000";--0
	WHEN "1110" => segs2 <= "1111001";--1
	WHEN "1101" => segs2 <= "0100100";--2
	WHEN "1100" => segs2 <= "0110000";--3
	WHEN "1011" => segs2 <= "0011001";--4
	WHEN "1010" => segs2 <= "0010010";--5
	WHEN "1001" => segs2 <= "0000010";--6
	WHEN "1000" => segs2 <= "1111000";--7
	WHEN "0111" => segs2 <= "0000000";--8
	WHEN "0110" => segs2 <= "0010000";--9
	WHEN "0101" => segs2 <= "0001000";--A
	WHEN "0100" => segs2 <= "0100001";--B
	WHEN "0011" => segs2 <= "1110000";--C
	WHEN "0010" => segs2 <= "0000011";--D
	WHEN "0001" => segs2 <= "0000110";--E
	WHEN "0000" => segs2 <= "0001110";--F	
	WHEN OTHERS => segs2 <= "0111111"; 
	-- This case reads the value of the buttons which are inputed in binary and then displays the number in HEX on the 2nd 7 seg display
	
	END CASE;-- ends the button case
	
	IF    BIN = "1111" AND SWT = "0000000000" THEN segS3 <= "1111001";--0
	ELSIF BIN = "1110" AND SWT = "0000000001" THEN segS3 <= "1111001";--1
	ELSIF BIN = "1101" AND SWT = "0000000011" THEN segS3 <= "1111001";--2
	ELSIF BIN = "1100" AND SWT = "0000000111" THEN segS3 <= "1111001";--3
	ELSIF BIN = "1011" AND SWT = "0000001111" THEN segS3 <= "1111001";--4
	ELSIF BIN = "1010" AND SWT = "0000011111" THEN segS3 <= "1111001";--5
	ELSIF BIN = "1001" AND SWT = "0000111111" THEN segS3 <= "1111001";--6
	ELSIF BIN = "1000" AND SWT = "0001111111" THEN segS3 <= "1111001";--7
	ELSIF BIN = "0111" AND SWT = "0011111111" THEN segS3 <= "1111001";--8
	ELSIF BIN = "0110" AND SWT = "0111111111" THEN segS3 <= "1111001";--9
   ELSIF BIN = "0101" AND SWT = "1111111111" THEN segS3 <= "1111001";--A
	ELSIF BIN = "0100" AND SWT = "0000000010" THEN segS3 <= "1111001";--B
	ELSIF BIN = "0011" AND SWT = "0000000110" THEN segS3 <= "1111001";--C
	ELSIF BIN = "0010" AND SWT = "0000001110" THEN segS3 <= "1111001";--D
	ELSIF BIN = "0001" AND SWT = "0000011110" THEN segS3 <= "1111001";--E
	ELSIF BIN = "0000" AND SWT = "0000111110" THEN segS3 <= "1111001";--F
	ELSE                      segS3 <= "0111111";
	END IF;-- ends if statment
	--This series of IF statments compares the button input and the switch input and if they are the same it displays a 1 on the 3rd 7 seg display
	--If it is not the same input then a - is displayed on the 3rd 7 seg display 
	
END PROCESS; -- ends process
		
END ARCHITECTURE;	-- ends architecture
